<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.cfp.mapper.ProposalMapper">


    <resultMap id="ProposalMap" type="io.cfp.model.Proposal" autoMapping="true">
        <!--<id property="id" column="id"/>-->
        <association property="event" resultMap="EventMap"/>
        <association property="user" resultMap="EventMap" />
    </resultMap>

    <resultMap id="EventMap" type="io.cfp.model.Event">
        <!--<id property="id" column="id"/>-->
    </resultMap>

    <resultMap id="UserMap" type="io.cfp.model.User">
        <!--<id property="email" column="id"/>-->
    </resultMap>

    <sql id="proposalColumns">
        SELECT
            *,
            p.schedule_date as "date",
            p.schedule_heure as "heure",
            p.refs as "references",
            e.id as "event.id",
            f.id as "format.id",
            f.name as "format.name",
            r.id as "room.id",
            r.name as "room.name",
            t.id as "track.id",
            t.libelle as "track.libelle",
            u.id as "user.id",
            u.email as "user.email"
        FROM proposals p
            left outer join events e on p.event_id = e.id
            left outer join formats f on p.format = f.id
            left outer join rooms r on p.room_id = r.id
            left outer join tracks t on p.track = t.id
            left outer join users u on p.user = u.id
    </sql>

    <select id="findAll" parameterType="io.cfp.model.queries.ProposalQuery" resultType="io.cfp.model.Proposal">
        <include refid="proposalColumns"/>
        <where>
            <if test="eventId">
                p.event_id = #{eventId}
            </if>
            <if test="userId">
                p.user = #{userId}
            </if>
            <if test="state">
                p.state = #{state}
            </if>
        </where>
    </select>

    <select id="findById" resultMap="ProposalMap">
        <include refid="proposalColumns"/>
        WHERE p.id = #{id}
    </select>

    <select id="count" parameterType="io.cfp.model.queries.ProposalQuery" resultType="int">
        SELECT count(*)
        FROM proposals p
        <where>
            <if test="eventId">
                p.event_id = #{eventId}
            </if>
            <if test="userId">
                p.user = #{userId}
            </if>
            <if test="state">
                p.state = #{state}
            </if>
        </where>
    </select>

    <insert id="insert" parameterType="io.cfp.model.Proposal" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        INSERT INTO proposals (
            state,
            name,
            description,
            refs,
            difficulty,
            added,
            user,
            format,
            schedule_date,
            schedule_heure,
            track,
            event_id,
            language,
            room_id,
            video,
            slides
        ) VALUES (
            #{state},
            #{name},
            #{description},
            #{references},
            #{difficulty},
            #{added},
            #{user.id},
            #{format.id},
            #{date},
            #{heure},
            #{track.id},
            #{event.id},
            #{language},
            #{room.id},
            #{video},
            #{slides}
        )
    </insert>

    <update id="update" parameterType="io.cfp.model.Proposal">
        UPDATE proposals
        SET state=#{state},
            name=#{name},
            description=#{description},
            refs=#{references},
            difficulty=#{difficulty},
            added=#{added},
            user=#{user.id},
            format=#{format.id},
            schedule_date=#{date},
            schedule_heure=#{heure},
            track=#{track.id},
            event_id=#{event.id},
            language=#{language},
            room_id=#{room.id},
            video=#{video},
            slides=#{slides}
        WHERE id = #{id}
    </update>

    <delete id="delete" parameterType="io.cfp.model.Proposal">
        DELETE FROM proposals
        WHERE id = #{id}
    </delete>

</mapper>
